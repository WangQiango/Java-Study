1. java文件编译过程
	程序员编写.java文件---->由javac编译成.class文件---->有虚拟机JVM编译成电脑认识的二级制文件
	
2. javac是什么？
	javac是java语言编程编译器(编译程序)，全称java compiler，javac工具读java编写的类和接口，编译成字节码代码的class文件。
	javac无需考虑机器所在平台，只需要供jvm编译处理，由jvm再编译成机器可以识别的机器码。这也是java可以实现跨平台的原理。

3. javac编译器的基本结构？（如何编译程序呢）
	首先，进行词法分析，读取源码的时候，一个字节一个字节的读进来，找出哪些字节是语法关键词，哪些不是；
	然后，进行语法分析，检查这些关键词组合在一起时是否符合java语法规范，比如if后面必须跟着一个布尔判断；
	之后，进行语义分析，把一些难懂的复杂的语法转化为最简洁的语法
	最后，通过字节码生成器生产字节码，也就是将一个数据结构转化为另一个数据结构。就像是所有中文词语翻译成英文后再组装成句子。
	javac的各个模块完成了将java源代码转化成java字节码的任务，所以javac有四个模块：
	词法分析器    语法分析器      语义分析器       代码生成器
	
4. JVM有哪些部分组成？运行流程是什么？ 
	JVM包含两个子系统：类加载系统（Classes loader）、执行引擎（Execution engine）
		   两个组件：JVM运行时数据区（Runtime data area）、本地接口（Native Interface）
	流程：首先通过编译器将java文件编译成class文件，类加载器将其加载到内存中，放到运行时数据区中的方法区内。字节码文件只是JVM的一套指令集规范，
		  并不能直接被底层操作系统所执行，所以需要特定的命令解析器执行引擎，将字节码翻译成底层系统指令，再交由CPU去执行，在此过程中还需要调用
		  其他语言的本地接口库来实现整个程序的功能。

5. 说一下Java运行时数据区？
    Java运行时区域分为：程序计数器、虚拟机栈、本地方法栈（前三者是线程私有的数据区）、方法区和堆（后两者是线程共有的数据区）
	1）、程序计数器、虚拟机栈、本地方法栈（前三者是线程私有的数据区）、方法区和堆（后两者是线程共有的数据区）
	